---
openapi: 3.0.0
info:
  title: 'oddscp.com: LIVE Odds HTTP API'
  description: |-
    API для получения букмекерских вилок и информации о LIVE спортивных
    событиях
  version: 0.1.1
servers:
- url: http://212.109.216.193:8111
tags:
- name: Sport
  x-displayName: Sport
  description: <SchemaDefinition schemaRef="#/components/schemas/Sport" />
- name: Bookmaker
  x-displayName: Bookmaker
  description: <SchemaDefinition schemaRef="#/components/schemas/Bookmaker" />
- name: BetType
  x-displayName: BetType
  description: <SchemaDefinition schemaRef="#/components/schemas/BetType" />
- name: Fork
  x-displayName: Fork
  description: <SchemaDefinition schemaRef="#/components/schemas/Fork" />
- name: Event
  x-displayName: Event
  description: |
    Событие на определенном букмекере
    <SchemaDefinition schemaRef="#/components/schemas/Event" />
- name: Market
  x-displayName: Market
  description: <SchemaDefinition schemaRef="#/components/schemas/Market" />
x-tagGroups:
- name: Основные
  tags:
  - PREMATCH / LIVE-вилки
  - LIVE-События
  - WebSocket [Обновление коэффициентов]
  - Валуи [Value bets]
  - Вспомогательное
- name: Модели
  tags:
  - Sport
  - Bookmaker
  - BetType
  - Fork
  - Event
  - Market
paths:
  "/valuebets":
    get:
      tags:
      - Валуи [Value bets]
      description: Возвращает список валуев по заданным параметрам
      summary: Получить список валуев
      operationId: getValueBets
      parameters:
      - name: bet_types
        description: Тип ставок в валуи<br>
          Актуальный список ставок с подробным описанием находится по этой ссылке - <a href="http://api.oddscp.com:8111/static/possible_bets_list.txt">http://api.oddscp.com:8111/static/possible_bets_list.txt</a>
        in: query
        style: form
        explode: false
        example: HALF_WIN,WIN
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/BetType"
      - name: sport
        description: Спорт
        in: query
        style: form
        explode: false
        example: tennis,soccer
        schema:
          type: array
          items:
            type: string
      - name: event_id
        description: Получение валуев только по указанному id события
        in: query
        schema:
          type: string
        example: 181993
      - name: bk_name
        description: Список букмекеров, участвующих в вилке
        in: query
        required: true
        style: form
        explode: false
        example: fonbet,olimp,bet365
        schema:
          type: array
          items:
            type: string
      - name: min_cf
        description: Минимальный коэффициент
        in: query
        example: 1.1
        schema:
          type: number
      - name: max_cf
        description: Максимальный коэффициент
        in: query
        example: 3.5
        schema:
          type: number
      - name: min_fi
        description: Минимальный % валуя
        in: query
        example: -1
        schema:
          type: number
      - name: max_fi
        description: Максимальный % валуя
        in: query
        example: 10
        schema:
          type: number
      - name: alive_sec
        description: Минимальное время существования вилки для указанного процента
          (-1%)
        in: query
        schema:
          type: number
          default: 0
      - name: alive_prc
        description: Процент валуя, относительно которого рассчитывается alive_sec
        in: query
        schema:
          type: number
          default: -1
          enum:
          - -1
          - 0
          - 0.5
          - 1
          - 1.5
          - 2
          - 2.5
          - 3
      - name: get_cfs
        description: (Уточнить) Выдает список коэффициентов для текущего маркета на всех бк в данный момент.
        in: query
        example: 1
        schema:
          type: number
      - name: score_filter
        description: УТОЧНИТЬ! (&sf=1)Отключение сверки счета между бк. По умолчанию у вилок включена сверка счета, что бы избежать ошибочных вилок из-за задержки обновления данных у БК. Указать "**&score_filter=0**" для отключение сверки счета. 
        in: query
        schema:
          type: number
        example: 0
      - name: get_market_data
        description: Включить отображение валуйных расчетов. Появятся valuing_data включающий себя, при __"1"__ - коэффициенты на других бк, валуйные расчеты. __"2"__ - коэффициенты на других бк, валуйные расчеты, счет на других бк и последнее время изменение коэфицента.
        in: query
        schema:
          type: number
          default: 2
          enum:
          - 1
          - 2
        example: 2       
      responses:
        '200':
          description: Возвращает массив valuebets
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Value"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
  "/koef":
   get:
      tags:
      - WebSocket [Обновление коэффициентов]
      summary: Получение и обновление коэффицентов
      description: __Работа ведется исключительно через WebSocket, а не через GET запросы.__<br><br>
       __Пример адреса для соединения&#58;__ <i>ws&#58;//api.oddscp.com&#58;6050 </i> (Адрес может меняться, уточняйте актуальный у поддержки, при покупке доступа)<br>
        __Пример сообщения для отправки&#58;__ <i>{"cmd"&#58; "subscribe", "auth_key"&#58; "aeb34659fbfa87895dfgf977b63647fe", "needed_bk"&#58; ["fonbet:live"]}</i><br><br>
       <pre>
       __Формат любого входящего сообщения&#58;__<br>
       [<br>
            &#9;BK_NAME - название бк,<br>
            &#9;TYPE - тип сообщения,<br>
            &#9;BK_EVENT_ID - наш внутренний ID события по каждой БК,<br>
        	  &#9;EVENT_ID - наш внутренний ID сгруппированного события<br>
            &#9;DATA - данные<br>
        ]<br>
         <br>
        __Значения BK_NAME&#58;__ 'bookmaker', 'bet365'<br>
         <br>
        __Пример EVENT_ID&#58;__ "8838266,0" - 0 в данном случае указывает на то, что событие не перевёрнуто (swapped = 0)<br>
         <br>
        __Типы сообщений TYPE&#58;__<br>
            &#9;"update_event" - обновление данных по заданному событию<br>
            &#9;"update_markets" - обновление рынков по заданному событию (одному)<br>
            &#9;"remove_markets" - удаление рынков<br>
            &#9;"remove_events" - удаление событий (возможно временное, например именно такие сообщения приходит при переподключении сканера)<br>
            &#9;"remove_events_final" - удаление событий (только финальное, через час после отсутствия активности по нему)<br>
         <br>
         <br>
        __Примеры данных DATA по типам сообщений&#58;__<br>
         <br>
            __&#9;update_event&#58; (массив с ключами)__<br>
                &#9;&#9;["bookmaker","update_event","BKMTN5CA36FC2875",<br>
                    &#9;&#9;&#9;{<br>
                       &#9;&#9;&#9;&#9;"bk_event_id"&#58;"BKMTN5CA36FC2875",               \# наш внутренний ID события<br>
                        &#9;&#9;&#9;&#9;"bk_event_native_id"&#58;"211652",                  \# ID события на БК (вероятно это тот gameid, о котором шла речь)<br>
                        &#9;&#9;&#9;&#9;"bk_name"&#58;"bookmaker",                          \# название бк<br>
                        &#9;&#9;&#9;&#9;"bk_id"&#58;"BKM",                                  \# 3-буквенный идентификатор бк<br>
                        &#9;&#9;&#9;&#9;"sport_id"&#58;"TN",                                \# идентификатор вида спорта<br>
                        &#9;&#9;&#9;&#9;"sport"&#58;"tennis",                               \# название вида спорта<br>
                        &#9;&#9;&#9;&#9;"event_name"&#58;"BERTRAN, P vs GRILLS, J",         \# название матча<br>
                        &#9;&#9;&#9;&#9;"team1"&#58;"BERTRAN, P",                           \# команда П1<br>
                        &#9;&#9;&#9;&#9;"team2"&#58;"GRILLS, J",                            \# команда П2<br>
                        &#9;&#9;&#9;&#9;"league_name"&#58;"Tennis - ITF Men - Cancun",      \# название лиги<br>
                        &#9;&#9;&#9;&#9;"direct_link"&#58;"",                               \# прямая ссылка (её нет ни для бет365, ни для bookmaker.eu)<br>
                        &#9;&#9;&#9;&#9;"added_at"&#58;"1583959227",                        \# время добавления матча (присутствует только в сообщениях после подключения, отсутствует при обновлениях)<br>
                        &#9;&#9;&#9;&#9;"score"&#58;"1&#58;0 (7&#58;5 4&#58;3) (0*&#58;0)"                   \# текущий счёт (всегда обновляется)<br>
                }]<br>
         <br>
        		["bookmaker","update_event","BKMTN5CA36FC2875", "1&#58;0 (7&#58;5 4&#58;3) (0*&#58;0)"]<br>
         <br>
        	Первое сообщение по каждому событию приходит полное. Далее - только счёт.<br>
        	Как это определять? Если данные это строка, то это счёт. Если данные это массив, то данные по событию полные.<br>
         <br>
         <br>
            __update_markets&#58; (массив БЕЗ ключей)__<br>
                &#9;["bookmaker","update_markets","BKMTN5CA36FC2875",[<br>
                    &#9;&#9;[<br>
                      &#9;&#9;&#9;"SET_02__WIN__P1", \# market_name&#58; название ставки (идентификатор)<br>
                      &#9;&#9;&#9;0,                 \# blocked&#58; 0-рынок активен, 1-рынок НЕактивен (недействителен/заморожен/ставку сделать нельзя)<br>
                      &#9;&#9;&#9;"1.322",           \# cf&#58; текущий коэффициент<br>
                    &#9;&#9;],<br>
                    &#9;&#9;[<br>
                      &#9;&#9;&#9;"SET_02__WIN__P2",<br>
                      &#9;&#9;&#9;0,<br>
                      &#9;&#9;&#9;"3.394",<br>
                    &#9;&#9;]<br>
                &#9;]]<br>
         <br>
            __remove_markets&#58; (массив БЕЗ ключей, список названий ставок)__<br>
                &#9;["bookmaker","remove_markets","BKMBS03BE9E7D704",<br>
                    &#9;&#9;[<br>
                        &#9;&#9;&#9;"HANDICAP_OT__P2(0.5)",<br>
                        &#9;&#9;&#9;"HANDICAP_OT__P1(-0.5)"<br>
                    &#9;&#9;]<br>
                &#9;]<br>
         <br>
            __remove_event&#58;__<br>
                &#9;["bookmaker","remove_event","BKMSCA2884C843CF"]<br>
         <br>
         <br>
            __remove_event_final&#58;__<br>
                &#9;["bookmaker","remove_event_final","BKMSCA2884C843CF"]<br>
         <br>
         <br>
         <br>
         <br>
        Особое внимание нужно уделить ping-сообщениям.<br>
        __Пример&#58;__ {"cmd"&#58;"ping", "last_delay_100avg"&#58;2.9580, "queue_count"&#58;4}<br>
         <br>
        Отвечать на них НИЧЕГО не нужно.<br>
        __last_delay_100avg__ - это задержка на отдачу данных, в милли-секундах, увеличивается если клиент (вы) начинает долго читать данные из сокета (стоит поставить алерты если значение больше 1000 и 10000)<br>
        __queue_count__ - количество сообщений в очереди на отдачу, растёт параллельно с предыдущим значением. при нормальной работе редко превышает 10 сообщений на каждую БК</pre>
      operationId: getKoef
      responses:
        '200':
          description: OK

  "/sports":
    get:
      tags:
      - Вспомогательное
      summary: Виды спорта
      description: Возвращает список доступных видов спорта с описанием
      operationId: getSports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Sport"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
  "/bookmakers":
    get:
      tags:
      - Вспомогательное
      summary: Букмекеры
      description: |-
        Возвращает список доступных букмекеров с описанием. В список войдут
        только те букмекеры, которые были запрошены/оплачены в Вашем тарифе.
      operationId: getBookmakers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Bookmaker"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
  "/forks":
    get:
      tags:
      - PREMATCH / LIVE-вилки
      description: Возвращает список PREMATCH / LIVE-вилок по заданным параметрам
      summary: Получить список PREMATCH / LIVE-вилок
      operationId: getForks
      parameters:
      - name: live
        description: Получение **PREMATCH-вилок**. Указать "**&live=0**" для получения прематч вилок. По умолчанию запрашиваются LIVE-вилки, т.е. для LIVE-вилок этот параметр указывать не надо.
        in: query
        schema:
          type: number
        example: 0
      - name: bet_types
        description: Тип ставок в вилке.<br>
          Актуальный список ставок с подробным описанием находится по этой ссылке - <a href="http://api.oddscp.com:8111/static/possible_bets_list.txt">http://api.oddscp.com:8111/static/possible_bets_list.txt</a>
        in: query
        style: form
        explode: false
        example: HALF_WIN,WIN
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/BetType"
      - name: sport
        description: Спорт
        in: query
        style: form
        explode: false
        example: tennis,soccer
        schema:
          type: array
          items:
            type: string
      - name: event_id
        description: Получение вилок только по указанному id события
        in: query
        schema:
          type: string
        example: 181993
      - name: bk2_name
        description: Список букмекеров, участвующих в вилке
        in: query
        required: true
        style: form
        explode: false
        example: fonbet,olimp,bet365
        schema:
          type: array
          items:
            type: string
      - name: bk_name
        description: Букмекер, который обязательно должен участвовать в вилке
        in: query
        example: fonbet
        schema:
          type: string
      - name: min_cf
        description: Минимальный коэффициент
        in: query
        example: 1.1
        schema:
          type: number
      - name: max_cf
        description: Максимальный коэффициент
        in: query
        example: 3.5
        schema:
          type: number
      - name: min_fi
        description: Минимальный % вилки
        in: query
        example: -1
        schema:
          type: number
      - name: max_fi
        description: Максимальный % вилки
        in: query
        example: 10
        schema:
          type: number
      - name: is_middles
        description: |-
          Коридоры в выдачи. -1 - без коридоров. 0 - вилки и коридоры.
          1 - только коридоры
        in: query
        schema:
          type: number
          default: 0
          enum:
          - -1
          - 0
          - 1
      - name: alive_sec
        description: Минимальное время существования вилки для указанного процента
          (-1%)
        in: query
        schema:
          type: number
          default: 0
      - name: alive_prc
        description: Процент вилки, относительно которого рассчитывается alive_sec
        in: query
        schema:
          type: number
          default: -1
          enum:
          - -1
          - 0
          - 0.5
          - 1
          - 1.5
          - 2
          - 2.5
          - 3
      - name: get_cfs
        description: Выдает список коэффициентов для текущего маркета на всех бк в данный момент и выдает текущий счёт на вилочном матче. В ответе появятся 3 ключа - cfs1, cfs2, all_scores.
                    <details>
         <summary>**<i>Способы применения (развернуть):</i>**</summary>
          <p><i>В первую очередь, следует использовать для определения "инициатора вилки".  В этом случае вам следует пройтись по всему списку БК и рассчитать вилки по стандартной формуле (мы с этим поможем, если её у вас нет) от нужного вам процента.<br><br>
          Также, следует обязательно учесть "зеркала" - оптимальный вариант взять самый высокий кф из всех зеркальных контор. Сам список зеркал можно получить используя данные метода /bookmakers.<br><br>
          Помимо определения "инициатора", эти данные можно использовать для более глубокой кастомизации ваших стратегий, или проще говоря - фильтровать общий поток вилок. Как именно? Тут уже всё остаётся на усмотрение вашей собственной фантазии и вашего опыта.<br><br>
          Наличие текущего счёта на вилочном матче по всем БК позволит вам более детально анализировать текущую ситуацию и быть более уверенными в тех ставках, которые вы совершаете.</i></p>
          </details>
        in: query
        example: 1
        schema:
          type: number
      - name: score_filter
        description: Отключение сверки счета между бк. По умолчанию у вилок включена сверка счета, что бы избежать ошибочных вилок из-за задержки обновления данных у БК. Указать "**&score_filter=0**" для отключение сверки счета. 
        in: query
        schema:
          type: number
        example: 0
      - name: show_swap
        description: Отображать был ли перевернут порядок команд для каждой бк в вилке. В ответе появятся 2 ключа - BK1_event_swapped и BK2_event_swapped. Указать "**&show_swap=1**" для включения отображения. 
        in: query
        schema:
          type: number
        example: 1        
      responses:
        '200':
          description: Возвращает массив Fork
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Fork"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
  "/forks/{fork_id}":
    get:
      tags:
      - PREMATCH / LIVE-вилки
      summary: Получить детали вилки
      description: |-
        Запрос для получения подробных деталей по отдельной вилке (по её
        ключу)
      operationId: getFork
      parameters:
      - name: fork_id
        description: Идентификатор вилки
        required: true
        in: path
        example: 70a5d610dac4c5c1a6
        schema:
          type: string
      responses:
        '200':
          description: Возвращает Fork
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Fork"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '404':
          description: Вилка не найдена
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
  "/events":
    get:
      tags:
      - LIVE-События
      summary: Получить список всех активных событий
      description: Запрос для получения всех активных событий
      operationId: getEvents
      parameters:
      - name: sport
        description: Спорт
        in: query
        example: soccer,tennis
        schema:
          type: string
      - name: bk_name
        description: Идентификатор букмекера
        in: query
        example: fonbet
        schema:
          type: string
      - name: live
        description: Получение **PREMATCH-событий**. Указать "**&live=0**" для получения прематч событй. По умолчанию запрашиваются LIVE-события, т.е. для LIVE-событий этот параметр указывать не надо.
        in: query
        schema:
          type: number
        example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Event"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
  "/events/{bk_event_id}":
    get:
      tags:
      - LIVE-События
      summary: Поиск события на определенном букмекере
      description: Запрос для поиска определенного события по id или названию
      operationId: getEvent
      parameters:
      - name: bk_event_id
        required: true
        description: id события
        in: path
        schema:
          type: string
        example: WLNBS21B94619065
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Event"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '404':
          description: Событие не найдено
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
  "/groups/{event_id}":
    get:
      tags:
      - LIVE-События
      summary: Получить группу связанных событий
      description: |-
        Запрос для получения всех событий с разных букмекеров, которые
        объединены в одну группу
      operationId: getGroup
      parameters:
      - name: event_id
        required: true
        description: id группы
        in: path
        schema:
          type: string
        example: 182220
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  ids:
                    olimp: OLPTT17EECABA264
                    1xbet: XBTTTDFE64657483
                    winline: WLNTTDE327C98125
                  status: OK
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
  "/markets":
    get:
      tags:
      - LIVE-События
      summary: Поиск рынков
      description: Запрос для поиска рынков по заданным параметрам.<br>Один из параметров обязателен при запросе - __bk_event_ids__ и/или __bk_name__
      operationId: getMarkets
      parameters:
      - name: bk_event_ids
        required: true
        description: список id событий
        in: query
        schema:
          type: string
        example: FONBM50F801035DE,OLPBM3A2C25A6CAF
      - name: sport
        required: false
        description: Список видов спорта
        in: query
        schema:
          type: string
        example: tennis,soccer
      - name: bk_name
        required: true
        description: Идентификатор букмекера
        in: query
        schema:
          type: string
        example: fonbet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Market"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '404':
          description: Рынок не найден
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
  "/markets/{bk_event_id}":
    get:
      tags:
      - LIVE-События
      summary: Получение всех рынков определенного события
      description: Запрос для поиска всех рынков определенного события
      operationId: getEventMarkets
      parameters:
      - name: bk_event_id
        required: true
        description: id события
        in: path
        schema:
          type: string
        example: WLNBS21B94619065
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               "$ref": "#/components/schemas/Market"
        '401':
          "$ref": "#/components/responses/UnauthorizedError"
        '422':
          "$ref": "#/components/responses/MissingParameterError"
components:
  schemas:
    Value:
      type: object
      required:
      - fork_id
      - event_id
      - income
      - BK1_name
      - BK2_name
      - BK1_bet_type
      - BK2_bet_type
      - bet_type
      - sport
      - BK1_game
      - BK2_game
      - BK1_bet
      - BK2_bet
      - BK1_alt_bet
      - BK2_alt_bet
      - BK1_cf
      - BK2_cf
      - BK1_event_id
      - BK2_event_id
      - BK1_event_native_id
      - BK2_event_native_id
      - BK1_event_meta
      - BK2_event_meta
      - BK1_market_meta
      - BK2_market_meta
      - BK1_href
      - BK2_href
      - BK1_league
      - BK2_league
      - BK1_score
      - BK2_score
      - alive_sec
      properties:
        fork_id:
          type: string
          description: ID валуя (ключ валуя)
        event_id:
          type: number
          description: Идентификатор группы событий
        income:
          type: number
          description: "% валуя (fi)"
        BK1_name:
          type: string
          description: Идентификатор БК на которой валуем (БК-1)
          example: fonbet
        BK2_name:
          type: string
          description: Всегда "valuebets"
          example: valuebets
        BK1_bet_type:
          description: Тип ставки на БК-1
          "$ref": "#/components/schemas/BetType"
        BK2_bet_type:
          description: Тип ставки на БК-2
          "$ref": "#/components/schemas/BetType"
        bet_type:
          description: |-
            Общий тип ставок в вилке. Если bk1_bet_type = bk2_bet_type,
            то bet_type = bk1_bet_type, иначе MIX
        sport:
          type: string
          description: Вид спорта
          example: tennis
        BK1_game:
          type: string
          description: Название события на БК-1
        BK2_game:
          type: string
          description: Название события на БК-2
        BK1_bet:
          type: string
          description: Ставка на БК-1
        BK2_bet:
          type: string
          description: Ставка на БК-2
        BK1_alt_bet:
          type: string
          nullable: true
          description: Альтернативная ставка на БК-1
        BK2_alt_bet:
          type: string
          nullable: true
          description: Альтернативная ставка на БК-2
        BK1_cf:
          type: number
          description: Коэффициент на БК-1
        BK2_cf:
          type: number
          description: Коэффициент на БК-2
        BK1_event_id:
          type: string
          description: Идентификатор (наш внутренний) события на БК-1
        BK2_event_id:
          type: string
          description: Идентификатор (наш внутренний) события на БК-2
        BK1_event_native_id:
          type: string
          description: Идентификатор (нативный, как на самой бк) события на БК-1
        BK2_event_native_id:
          type: string
          description: Идентификатор (нативный, как на самой бк) события на БК-2
        BK1_event_meta:
          type: string
          description: 'Формат: JSON. Мета-данные по событию на БК-1'
        BK2_event_meta:
          type: string
          description: 'Формат: JSON. Мета-данные по событию на БК-2'
        BK1_market_meta:
          type: string
          description: 'Формат: JSON. Мета-данные для поиска нужной ставки на БК-1'
        BK2_market_meta:
          type: string
          description: 'Формат: JSON. Мета-данные для поиска нужной ставки на БК-2'
        BK1_href:
          type: string
          description: Ссылка на событие на БК-1
        BK2_href:
          type: string
          description: Ссылка на событие на БК-2
        BK1_league:
          type: string
          description: Название лиги на БК-1
        BK2_league:
          type: string
          description: Название лиги на БК-2
        BK1_score:
          type: string
          description: Текущий счёт на БК-1<details><summary>**<i>Примеры и описание формирования счета (развернуть):</i>**</summary><p><br>H - половина<br>G - гейм<br>M - карта (киберспорт)<br>R - раунд<br>T - тайм<br>S - сет<br>P - период<br>I - иннинг (бейсбол)<br>Q - четверь<br><br>OT - овертайм (overtime - дополнительное время)<br>B - брейк (перерыв)<br>* - чья подача (Бадминтон, Волейбол)<br><br><br>Примеры:<br>1:0 (6:3)|T2,B<br><br>B - значит перерыв (break) перед 2 таймом;<br><br>—————<br>1:0 (6:3 0:0)|S2,B<br><br>"1:0" - текущий счет;<br>"6:3" - в первом сете;<br>"0:0" - это счет во втором сете;<br>S2,B - сейчас брейк перед вторым сетом;<br><br>—————<br>1:1 (0:1 1:0) 68`<br><br>"68" - минуты игры с начала матча;<br>"1:1" - текущий счет;<br>"(0:1 1:0)" - идет второй тайм. В первом тайме забила 2-ая команда, а во втором тайме забила 1-ая команда;</p></details>
        BK2_score:
          type: string
          description: Текущий счёт на БК-2
        alive_sec:
          type: string
          description: Сколько секунд вилка имеет процент выше заданного в alive_prc
            (-1%)
        valuing_data:
          type: string
          description: Формат - JSON. Коэффициенты на других бк, валуйные расчеты, счет на других бк и последнее время изменение коэфицента.
      example:
        fork_id: 8a86a9cd528b53b366
        income: 0
        sport: volleyball
        bet_type: WIN
        event_id: '178089'
        BK1_bet: WIN__P1
        BK1_bet_type: WIN
        BK1_alt_bet: ''
        BK1_cf: 3
        BK1_event_id: BT3VBD2545FB3320
        BK1_event_native_id: 6V200234215476232932C91A_1_1
        BK1_game: Zenit Novosibirsk-pro vs Izumrud Berdsk-pro
        BK1_href: https://www.bet365.com
        BK1_league: Russia Liga Pro
        BK1_name: bet365
        BK1_score: 1:1 (19:25 25:23 17:20)
        BK1_event_meta: ''
        BK1_market_meta: '{"betId":"687799702","name":"Game Lines|Zenit Novosibirsk-pro|Winner"}'
        BK2_bet: WIN__P2
        BK2_bet_type: WIN
        BK2_alt_bet: ''
        BK2_cf: 1.5
        BK2_event_id: FONVB5B99B3C9A2B
        BK2_event_native_id: '20190837'
        BK2_game: Зенит Новосибирск-про vs Изумруд Бердск-про
        BK2_href: https://www.fonbet.ru//sport/event/volleyball/45580/20190837/
        BK2_league: Россия. Лига Про. Новосибирск
        BK2_name: fonbet
        BK2_score: 1:1 (19:25 25:23 17:20*)
        BK2_event_meta: ''
        BK2_market_meta: '{"isHeader":true,"fieldName":"v2","factor_id":923}'
        alive_sec: 32
        valuing_data: '{
            "cfs": {
                "BT3": [
                    "21",
                    120,
                    "0:2 (9:25 13:25 19:21)",
                    4.56
                ],
                "WLN": [
                    "12.25",
                    23,
                    "0:2 (9:25 13:25 19:21)",
                    8.16
                ],
                "1WN": [
                    "11",
                    77,
                    "0:2 (9:25 13:25 19:21)",
                    null
                ],
                "STY": [
                    "11",
                    137,
                    "0:2 (9:25 13:25 19:21)",
                    8.1
                ]
            },
            "data": {
                "need_cfs": [
                    12.25,
                    11,
                    11
                ],
                "cf_orig": 21,
                "aw_avg": -4.1,
                "aw_mdn": -4.1,
                "ow_avg": -0.1,
                "ow_mdn": -0.1,
                "cf_mdn": 11,
                "cf_avg": 11.387,
                "cf_avg2": 0.8442,
                "cf_mdn2": 0.9091,
                "diff_avg": 4.2,
                "diff_mdn": 4.5,
                "min_max_dst": 4.1,
                "total_cnt": 3,
                "total_pos": 1,
                "better_cnt": 0,
                "min_aw": -4.64,
                "min_ow": -1.12,
                "min_diff": 3.4
            }'
        
    Fork:
      type: object
      required:
      - fork_id
      - event_id
      - income
      - ow_income
      - is_middles
      - is_cyber
      - BK1_name
      - BK2_name
      - BK1_bet_type
      - BK2_bet_type
      - bet_type
      - sport
      - BK1_game
      - BK2_game
      - BK1_bet
      - BK2_bet
      - BK1_alt_bet
      - BK2_alt_bet
      - BK1_cf
      - BK2_cf
      - BK1_event_id
      - BK2_event_id
      - BK1_event_native_id
      - BK2_event_native_id
      - BK1_event_meta
      - BK2_event_meta
      - BK1_market_meta
      - BK2_market_meta
      - BK1_href
      - BK2_href
      - BK1_league
      - BK2_league
      - BK1_score
      - BK2_score
      - alive_sec
      properties:
        fork_id:
          type: string
          description: Ключ вилки (fork_key)
        event_id:
          type: number
          description: Идентификатор группы событий
        income:
          type: number
          description: "% вилки (fi)"
        ow_income:
          type: number
          description: fi * 2 + bk1_margin + bk2_margin (ow)
        is_middles:
          type: boolean
          description: false - обычная вилка. true - коридор
        is_cyber:
          type: boolean
          description: false - не является киберспортом. true - явялется киберспортом
        BK1_name:
          type: string
          description: Идентификатор первой БК (БК-1)
          example: fonbet
        BK2_name:
          type: string
          description: Идентификатор второй БК (БК-2)
          example: fonbet
        BK1_bet_type:
          description: Тип ставки на БК-1
          "$ref": "#/components/schemas/BetType"
        BK2_bet_type:
          description: Тип ставки на БК-2
          "$ref": "#/components/schemas/BetType"
        bet_type:
          description: |-
            Общий тип ставок в вилке. Если bk1_bet_type = bk2_bet_type,
            то bet_type = bk1_bet_type, иначе MIX
        sport:
          type: string
          description: Вид спорта
          example: tennis
        BK1_game:
          type: string
          description: Название события на БК-1
        BK2_game:
          type: string
          description: Название события на БК-2
        BK1_bet:
          type: string
          description: Ставка на БК-1
        BK2_bet:
          type: string
          description: Ставка на БК-2
        BK1_alt_bet:
          type: string
          nullable: true
          description: Альтернативная ставка на БК-1
        BK2_alt_bet:
          type: string
          nullable: true
          description: Альтернативная ставка на БК-2
        BK1_cf:
          type: number
          description: Коэффициент на БК-1
        BK2_cf:
          type: number
          description: Коэффициент на БК-2
        BK1_event_id:
          type: string
          description: Идентификатор (наш внутренний) события на БК-1
        BK2_event_id:
          type: string
          description: Идентификатор (наш внутренний) события на БК-2
        BK1_event_native_id:
          type: string
          description: Идентификатор (нативный, как на самой бк) события на БК-1
        BK2_event_native_id:
          type: string
          description: Идентификатор (нативный, как на самой бк) события на БК-2
        BK1_event_meta:
          type: string
          description: 'Формат: JSON. Мета-данные по событию на БК-1'
        BK2_event_meta:
          type: string
          description: 'Формат: JSON. Мета-данные по событию на БК-2'
        BK1_market_meta:
          type: string
          description: 'Формат: JSON. Мета-данные для поиска нужной ставки на БК-1'
        BK2_market_meta:
          type: string
          description: 'Формат: JSON. Мета-данные для поиска нужной ставки на БК-2'
        BK1_href:
          type: string
          description: Ссылка на событие на БК-1
        BK2_href:
          type: string
          description: Ссылка на событие на БК-2
        BK1_league:
          type: string
          description: Название лиги на БК-1
        BK2_league:
          type: string
          description: Название лиги на БК-2
        BK1_score:
          type: string
          description: Текущий счёт на БК-1
        BK2_score:
          type: string
          description: Текущий счёт на БК-2
        alive_sec:
          type: string
          description: Сколько секунд вилка имеет процент выше заданного в alive_prc
            (-1%)
        cfs1:
          type: string
          description: Коэффициенты на команду №1
        cfs2:
          type: string
          description: Коэффициенты на команду №2
        all_scores:
          type: string
          description: Текущий счёт на вилочном матче по всем БК.
        BK1_event_swapped:
          type: string
          description: Был ли перевернут порядок команд у БК1.
        BK2_event_swapped:
          type: string
          description: Был ли перевернут порядок команд у БК2.
      example:
        fork_id: 8a86a9cd528b53b366
        income: 0
        sport: volleyball
        bet_type: WIN
        event_id: '178089'
        is_middles: '0'
        is_cyber: '0'
        ow_income: 14.98
        BK1_bet: WIN__P1
        BK1_bet_type: WIN
        BK1_alt_bet: ''
        BK1_cf: 3
        BK1_event_id: BT3VBD2545FB3320
        BK1_event_native_id: 6V200234215476232932C91A_1_1
        BK1_game: Zenit Novosibirsk-pro vs Izumrud Berdsk-pro
        BK1_href: https://www.bet365.com
        BK1_league: Russia Liga Pro
        BK1_name: bet365
        BK1_score: 1:1 (19:25 25:23 17:20)
        BK1_event_meta: ''
        BK1_market_meta: '{"betId":"687799702","name":"Game Lines|Zenit Novosibirsk-pro|Winner"}'
        BK2_bet: WIN__P2
        BK2_bet_type: WIN
        BK2_alt_bet: ''
        BK2_cf: 1.5
        BK2_event_id: FONVB5B99B3C9A2B
        BK2_event_native_id: '20190837'
        BK2_game: Зенит Новосибирск-про vs Изумруд Бердск-про
        BK2_href: https://www.fonbet.ru//sport/event/volleyball/45580/20190837/
        BK2_league: Россия. Лига Про. Новосибирск
        BK2_name: fonbet
        BK2_score: 1:1 (19:25 25:23 17:20*)
        BK2_event_meta: ''
        BK2_market_meta: '{"isHeader":true,"fieldName":"v2","factor_id":923}'
        alive_sec: 32
        cfs1: '{"SBI":"2.74","XST":"2.89","PAB":"3.15","PAC":"3.15","PAN":"3.15","IFO":"2.93","STX":"3.45","OLC":"3.08","TNC":"3.03","DOW":"3.326","DAF":"3.43","LBT":"3.08","VBT":"2.95","BOR":"2.95","OLP":"2.06","XBI":"2.856","XBT":"2.89","MLB":"2.856","PIN":"3.55","BT3":"2.825","BCY":"3.2","BCT":"3.2","WLN":"2.86","BVD":"2.9","BNB":"2.94","FAV":"2.64","ZEN":"2.97","GGB":"3.01","GGG":"3.01","MTH":"3.2","MTU":"3.2"}'
        cfs2: '{"SBI":"1.34","XST":"1.43","PAB":"1.33","PAC":"1.33","PAN":"1.33","IFO":"1.29","STX":"1.26","OLC":"1.32","TNC":"1.33","DOW":"1.25","DAF":"1.23","LBT":"1.3","VBT":"1.35","BOR":"1.35","OLP":"1.68","XBI":"1.41","XBT":"1.43","MLB":"1.41","PIN":"1.268","BT3":"1.375","BCY":"1.3","BCT":"1.3","WLN":"1.34","BVD":"1.385","BNB":"1.35","FAV":"1.41","ZEN":"1.35","GGB":"1.32","GGG":"1.32","MTH":"1.3","MTU":"1.3"}'
        all_scores: \[[["SBI"],"2:0 ( 2:0)"],[["XST"],"2:0 (2:0) 30:12|H1"],[["PAB","PAC","PAN","BCY"],"2:0 (2:0) 30:07"],[["IFO","LBT"],"2:0 (2:0)"],[["STX"],"2:0 30:19"],[["OLC"],"2:0 31\""],[["TNC","DOW","PIN","GGB","GGG"],"2:0"],[["DAF"],"0:0"],[["VBT","BOR"],"2:0 (2:0) 31`"],[["OLP"],"2:0 19:00"],[["XBI"],"2:0 (2:0) 30:09|H1"],[["XBT"],"2:0 (2:0) 30:08|H1"],[["MLB"],"2:0 (2:0) 30:07|H1"],[["BT3"],"2:0 30:14"],[["BCT","FAV"],"2:0 (2:0) 30:06"],[["WLN"],"2:0 (2:0) 30"],[["BVD"],"2:0 (2:0) 17:28"],[["BNB"],""],[["ZEN"],"2:0 31"],[["MTH","MTU"],"2:0 30:00 "]]
        BK1_event_swapped: '0'
        BK2_event_swapped: '0'

    Sport:
      type: object
      required:
      - sport_id
      - sport_name
      - display_name_ru
      - display_name_en
      properties:
        sport_id:
          type: string
          description: Краткое обозначение спорта
        sport_name:
          type: string
          description: Используется для запросов
        display_name_ru:
          type: string
          description: Название на русском
        display_name_en:
          type: string
          description: Название на английском
      example:
        sport_id: TN
        sport_name: tennis
        display_name_ru: Теннис
        display_name_en: Tennis
    Bookmaker:
      type: object
      required:
      - bk_id
      - bk_name
      - display_name_ru
      - display_name_en
      - production
      - private
      - active
      properties:
        bk_id:
          type: string
          description: Краткое обозначение букмекера
        bk_name:
          type: string
          description: Используется для запросов
        display_name_ru:
          type: string
          description: Название на русском
        display_name_en:
          type: string
          description: Название на английском
        production:
          type: string
          description: Букмекер протестирован
        private:
          type: string
          description: Букмекер является приватным
        active:
          type: string
          description: Букмекер доступен для запросов
      example:
        bk_id: FON
        bk_name: fonbet
        display_name: Фонбет
        display_name_en: Fonbet
        production: '1'
        private: '0'
        active: '1'
    BetType:
      type: string
      enum:
      - MIX
      - WIN
      - WIN_OT
      - WIN_RT
      - SET_WIN
      - HALF_WIN
      - HALF_WIN_OT
      - GAME_WIN
      - TOTALS
      - SET_TOTALS
      - HALF_TOTALS
      - TOTALS_OT
      - TOTALS_RT
      - HALF_TOTALS_OT
      - TEAM_TOTALS_CORNERS
      - TEAM_TOTALS
      - SET_TEAM_TOTALS
      - HALF_TEAM_TOTALS
      - TEAM_TOTALS_OT
      - TEAM_TOTALS_RT
      - HANDICAP
      - HANDICAP_3W
      - HALF_HANDICAP
      - SET_HANDICAP
      - HANDICAP_OT
      - HANDICAP_RT
      - HALF_HANDICAP_OT
      - TEAMS_TO_SCORE
      - SET_TEAMS_TO_SCORE
      - HALF_TEAMS_TO_SCORE
      - CORRECT_SCORE
      - SET_CORRECT_SCORE
      - HALF_CORRECT_SCORE
      - WHO_SCORE
      - SET_WHO_SCORE
      - HALF_WHO_SCORE
      - WILL_BE_OT
      - SET_WILL_BE_OT
      - FIRST_TO_SCORE
      - TOTALS_ODD
      - SET_TOTALS_ODD
      - HALF_TOTALS_ODD
      - TEAM_TOTALS_ODD
      - SET_TEAM_TOTALS_ODD
      - HALF_TEAM_TOTALS_ODD
      - CLEAN_SHEET
      - SETS_TOTALS
      - SETS_HANDICAP
      - WIN_HALF_MATCH
      - TOTALS_CORNERS
      - HALF_TOTALS_CORNERS
      - HANDICAP_CORNERS
      - HALF_HANDICAP_CORNERS
      - ASIAN_TOTALS
      - SET_TOTALS
      - HALF_TOTALS
      - WIN_CORNERS
      - HALF_WIN_CORNERS
      - ASIAN_TOTALS_CORNERS
      - HALF_ASIAN_TOTALS_CORNERS
      - WHO_SCORE_3W
      - SET_TOTALS_3W
      - HALF_TOTALS_CORNERS_3W
      - HALF_TOTALS_3W
      - TOTALS_CORNERS_3W
      - TOTALS3W_CORNERS
      - HALF_TOTALS3W_CORNERS
      - TEAM_GOALS
      - SET_TEAM_GOALS
      - HALF_TEAM_GOALS
    Event:
      type: object
      required:
      - bk_event_id
      - bk_event_native_id
      - bk_name
      - bk_id
      - event_id
      - event_name
      - team1
      - team2
      - direct_link
      - league_name
      - score
      - sport
      - sport_id
      - active
      - updated_at
      - last_cf_at
      - has_draw
      - __unique__
      - swapped
      properties:
        bk_name:
          type: string
          example: fonbet
          description: Идентификатор букмекера
        bk_id:
          type: string
          example: FON
          description: Краткое обозначение букмекера
        event_id:
          type: string
          description: Идентификатор группы событий
        bk_event_id:
          type: string
          description: Идентификатор события внутри системы
        bk_event_native_id:
          type: string
          description: Идентификатор события на букмекере
        event_name:
          type: string
          description: Полное название события
        team1:
          type: string
          description: Название первой команды
        team2:
          type: string
          description: Название второй команды
        direct_link:
          type: string
          description: Ссылка на событие на БК
        league_name:
          type: string
          description: Название лиги/соревнования
        score:
          type: string
          description: Текущий счёт
        sport:
          type: string
          example: tennis
          description: Вид спорта
        sport_id:
          type: string
          example: tennis
          description: Краткое обозначение спорта
        active:
          type: string
          example: tennis
          description: Индикатор активности события
        updated_at:
          type: string
          example: tennis
          description: Время последнего изменения события (счета)
        last_cf_at:
          type: string
          example: tennis
          description: Время последнего изменения коэффициентов
        has_draw:
          type: string
          example: tennis
          description: уточнить
        __unique__:
          type: string
          example: tennis
          description: уточнить
        swapped:
          type: string
          example: tennis
          description: уточнить         
      example:
        bk_event_id: XBTTTDFE64657483
        bk_event_native_id: '225864109'
        bk_name: 1xbet
        bk_id: XBT
        has_draw: '0'
        __unique__: '29172'
        sport_id: TT
        sport: table-tennis
        event_name: Татьяна Юган (Укр) vs Татьяна Ярошенко (Укр)
        team1: Татьяна Юган (Укр)
        team2: Татьяна Ярошенко (Укр)
        league_name: Сетка Кап. Женщины
        direct_link: https://1xstavka.ru/live/Table-Tennis/1734759-Setka-Cup-Women/225864109-Tatiana-Yugan-Tatiana-Yaroshenko
        added_at: '1581918479'
        score: 2:0 (11:6 12:10 4:2) (0:0)
        active: '1'
        updated_at: '1581920029'
        last_cf_at: '1581920029'
        event_id: '93134'
        swapped: '0'
    Market:
      type: object
      required:
      - bet
      - cf
      - direct_link
      - blocked
      - meta
      - last_of_three
      - market_type_idx
      - updated_at
      - updated_at_ms
      properties:
        bet:
          type: string
          description: Название ставки
        cf:
          type: number
          description: Коэффициент
        direct_link:
          type: string
          description: Ссылка на событие
        blocked:
          type: boolean
          description: Индикатор блокировки ставки (ставка недоступна на самой БК)
        meta:
          type: string
          description: Формат JSON. Мета-данные для поиска нужной ставки на БК.
        last_of_three:
          type: string
          description: Уточнить
        market_type_idx:
          type: string
          description: ID типа маркета (уточнить)
        updated_at:
          type: number
          description: Метка времени последнего обновления ставки
        updated_at_ms:
          type: number
          description: Метка времени последнего обновления ставки в милисекундах
      example:
        bet: WIN__P1
        bk_name: 1xbet
        blocked: '0'
        cf: '1.02'
        direct_link: ''
        meta: '{"group_name":"Основные","market_name":"Исходы","outcome_name":"1","subevent_id":31703982,"market_type":0,"market_num":120,"factor_id":921}'
        last_of_three: ''
        market_type_idx: '1-0-0-1'
        updated_at: '1573193575'
        updated_at_ms: '1573193575251'
    Error:
      type: object
      properties:
        status:
          type: string
        msg:
          type: string
  securitySchemes:
    URITokenAuth:
      description: |-
        Ключ пользователя передаётся со всеми остальными параметрами в
        Query String. Его можно найти в Личном Кабинете, после оплаты/подключения
        тарифа.
      type: apiKey
      in: query
      name: token
  responses:
    UnauthorizedError:
      description: Токен отсутствует, просрочен или не хватает прав
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
    MissingParameterError:
      description: Отсутствует указанный параметр
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
security:
- URITokenAuth: []
